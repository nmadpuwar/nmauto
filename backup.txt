for (i = 0, index = 0; i < parallelCount + 1 && command[index] != NULL; i++, index = index + 2)
            {
                //    strcpy(whatthehell, omgpath);
                tokenParsed = pathToken(omgpath);
                printf("--------------------%s\n", omgpath);
                j = 0;
                printf("=====================%s %s", tokenParsed[0], tokenParsed[1]);
                //    while (tokenParsed[j] != NULL)
                //  {
                strcpy(extraString, "tests/");
                strcat(extraString, command[index]);
                /*  strcat(extraString, "/");
                    strcat(extraString, command[index]); */
                //    strcat(tokenParsed[j], "/");
                //    strcat(tokenParsed[j], command[index]);
                //   printf("*******************%s\n", tokenParsed[j]);

                fd = access(extraString, X_OK);
                if (fd != -1)
                {
                    child_pids[i] = fork();
                    if (child_pids[i] < 0)
                    {
                        write(STDERR_FILENO, error_message, strlen(error_message));
                        exit(1);
                    }
                    if (child_pids[i] == 0)
                    {
                        if (execv(extraString, command) < 0)
                        {
                            perror(command[index]);
                        }
                    }
                    else
                    {
                        waitpid(child_pids[i], &stat_loc, WUNTRACED);
                    }
                   // break;
                }
                else
                {
                    j++;
                }
                //   }
                if (fd == -1)
                {
                    write(STDERR_FILENO, error_message, strlen(error_message));
                }
            }
        }